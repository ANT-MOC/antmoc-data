[
  {
    "name": "File",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [],
    "doc": "File name (auto-detected)"
  },
  {
    "name": "FileTimeStamp",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [],
    "doc": "Last modification time of the file (auto-detected)"
  },
  {
    "name": "FileSize",
    "dtype": "float",
    "fmt": "{:.2f}",
    "patterns": [],
    "doc": "File size in KB (auto-detected)"
  },
  {
    "name": "JobId",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [],
    "doc": "The leading numbers of the file name"
  },
  {
    "name": "CaseName",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "case name[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Case name is not in antmoc log files but generated by submission scripts"
  },
  {
    "name": "Refines",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "global lattice refines[ \t]+=[ \t]+(.*)"
    ],
    "doc": "Global lattice refines used to overrite geometry settings"
  },
  {
    "name": "Rings",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "global cell rings[ \t]+=[ \t]+(.*)"
    ],
    "doc": "Global cell rings used to overrite geometry settings"
  },
  {
    "name": "Sectors",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "global cell sectors[ \t]+=[ \t]+(.*)"
    ],
    "doc": "Global cell sectors used to overrite geometry settings"
  },
  {
    "name": "Azims",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "azimuthal angles[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Number of azimuthal angles"
  },
  {
    "name": "XYSpacing",
    "dtype": "float",
    "fmt": "{:.5f}",
    "patterns": [
      "azimuthal spacing[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Radial track spacing"
  },
  {
    "name": "Polars",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "polar angles[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Number of polar angles"
  },
  {
    "name": "ZSpacing",
    "dtype": "float",
    "fmt": "{:.5f}",
    "patterns": [
      "polar spacing[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Axial track spacing"
  },
  {
    "name": "Quadrature",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "quadrature[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Quadrature type"
  },
  {
    "name": "Segmentation",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "segment formation[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Segmentation formation"
  },
  {
    "name": "Zones",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "axial zones[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Axial zones for segmentation"
  },
  {
    "name": "Solver",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "solver[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Solver type"
  },
  {
    "name": "MaxIterations",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "max iterations[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Maximum number of iterations"
  },
  {
    "name": "Tolerance",
    "dtype": "float",
    "fmt": "{:E}",
    "patterns": [
      "tolerance[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Criteria for convergence"
  },
  {
    "name": "Stabilization",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "stabilization[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Stabilization type"
  },
  {
    "name": "StabilizationFactor",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "stabilization factor[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Stabilization factor"
  },
  {
    "name": "RequiredGroups",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "required energy groups?[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Selected energy groups for computation"
  },
  {
    "name": "Modules",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "modules[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Module numbers in X-, Y- and Z-direction respectively"
  },
  {
    "name": "Domains",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "spatial domains[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Domain decomposition"
  },
  {
    "name": "TrackMapping",
    "dtype": "str",
    "fmt": "{}",
    "patterns": [
      "Auto-selected track mapping algorithm[ \t]+=[ \t]+(.+)",
      "\\][ \t]+track mapping[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Track mapping algorithm"
  },
  {
    "name": "Ranks",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "ranks[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Number of MPI ranks"
  },
  {
    "name": "Threads",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "threads per rank[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Number of threads per rank"
  },
  {
    "name": "IdealEfficiency",
    "dtype": "float",
    "fmt": "{:.2f}%",
    "patterns": [
      "ideal efficiency of track mapping.*=[ \t]+(.+)%"
    ],
    "doc": "Ideal efficiency of the track mapping algorithm"
  },
  {
    "name": "ExtFSRs",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "total number of extruded fsrs[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Total number of extruded FSRs"
  },
  {
    "name": "FSRs",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "total number of fsrs[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Total number of 3D FSRs"
  },
  {
    "name": "Chains2D",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "total number of 2D chains[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Total number of 2D chains"
  },
  {
    "name": "Tracks3D",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "number of 3D tracks.*=[ \t]+(.+)"
    ],
    "doc": "Total number of 3D tracks"
  },
  {
    "name": "Volume",
    "dtype": "float",
    "fmt": "{:.2f}",
    "patterns": [
      "total fsr volume[ \t]+=[ \t]+(.+)"
    ],
    "doc": "Total volume computed by track approximation"
  },
  {
    "name": "Segments",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      ".*[0-9]+[ \t]+([0-9]+)[ \t]+[0-9]+[ \t]+"
    ],
    "doc": "Total number of 3D segments"
  },
  {
    "name": "MemAngularFlux",
    "dtype": "float",
    "fmt": "{:.3f}",
    "patterns": [
      "max boundary angular flux.*=[ \t]*([0-9\\.]+).*"
    ],
    "doc": "Max memory usage of boundary angular flux per domain"
  },
  {
    "name": "MemScalarFlux",
    "dtype": "float",
    "fmt": "{:.3f}",
    "patterns": [
      "max scalar flux storage.*=[ \t]*([0-9\\.]+).*"
    ],
    "doc": "Max memory usage of scalar flux per domain"
  },
  {
    "name": "MemSource",
    "dtype": "float",
    "fmt": "{:.3f}",
    "patterns": [
      "max source storage.*=[ \t]*([0-9\\.]+).*"
    ],
    "doc": "Max memory usage of source per domain"
  },
  {
    "name": "MemTempSegments",
    "dtype": "float",
    "fmt": "{:.3f}",
    "patterns": [
      "max temporary segment storage.*=[ \t]*([0-9\\.]+).*"
    ],
    "doc": "Max memory usage of temporary segments per domain"
  },
  {
    "name": "Iterations",
    "dtype": "int",
    "fmt": "{}",
    "patterns": [
      "iteration ([0-9]+).*k_eff.*"
    ],
    "doc": "Actual number of iterations"
  },
  {
    "name": "Keff",
    "dtype": "float",
    "fmt": "{:.6f}",
    "patterns": [
      "iteration.*k_eff[ \t]+=[ \t]+([0-9\\.]+).*"
    ],
    "doc": "Effective multiplication factor"
  },
  {
    "name": "InputTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "total input time\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time for input and geometry initialization"
  },
  {
    "name": "RayTracingTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "total track generation & segmentation time\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time for ray tracing"
  },
  {
    "name": "TrackMappingTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "time to mapping 2D tracks\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time for track mapping algorithm"
  },
  {
    "name": "ExtFSRsCreationTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "extrudedfsrs creation\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time to create extruded FSRs by tracing on the superposition plane"
  },
  {
    "name": "ExtFSRsReductionTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "extrudedfsrs reduction\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time to reduce extruded FSRs after creation"
  },
  {
    "name": "2DSegmentationTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "segmenting on superposition plane\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time to segment on superposition plane"
  },
  {
    "name": "SolutionTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "total time to solution\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time to solution"
  },
  {
    "name": "SolverInitTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "solver initialization\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time to compute FSR volumes, centroids and for initializing scalar flux"
  },
  {
    "name": "SourceIterationTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "source iteration\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time for source iterations"
  },
  {
    "name": "TransportSweepTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "transport sweep\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time for transport sweep"
  },
  {
    "name": "ScalarFluxCommTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "scalar flux transfer\\.*[ \t]*(.+)[ \t]*s.*"
    ],
    "doc": "Time to transfer scalar flux during transport sweep"
  },
  {
    "name": "PerSegmentTime",
    "dtype": "float",
    "fmt": "{:.5E}",
    "patterns": [
      "integration time per segment.*[ \t]+(.+)[ \t]*s.*"
    ],
    "doc": "Time for integration per segment"
  }
]